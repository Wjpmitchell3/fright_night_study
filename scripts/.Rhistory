df_exp$HH.Before[i] <- df_exp$IPE...HH.Before[i]
if (df_exp$Stage[i] == "One Week Post-Exposure")
df_exp$HH.Enjoy[i] <- df_exp$OWPE...HH.Enjoy[i]
}
for (i in 1:length(rownames(df_exp))){
if (df_exp$Stage[i] == "One Week Post-Exposure")
df_exp$Information[i] <- df_exp$OWPE...Information[i]
}
# Renaming Social Support
df_exp <- rename(df_exp, PT5.Support = IPE...PT5.Support)
df_exp <- rename(df_exp, PT5.Close = IPE...PT5.Close)
df_exp <- rename(df_exp, PT5.Relation = IPE...PT5.Relation)
df_exp <- rename(df_exp, PT4.Support = IPE...PT4.Support)
df_exp <- rename(df_exp, PT4.Close = IPE...PT4.Close)
df_exp <- rename(df_exp, PT4.Relation = IPE...PT4.Relation)
df_exp <- rename(df_exp, PT3.Support = IPE...PT3.Support)
df_exp <- rename(df_exp, PT3.Close = IPE...PT3.Close)
df_exp <- rename(df_exp, PT3.Relation = IPE...PT3.Relation)
df_exp <- rename(df_exp, PT2.Support = IPE..PT2.Support)
df_exp <- rename(df_exp, PT2.Close = IPE...PT2.Close)
df_exp <- rename(df_exp, PT2.Relation = IPE...PT2.Relation)
df_exp <- rename(df_exp, PT1.Support = IPE..PT1.Support)
df_exp <- rename(df_exp, PT1.Close = IPE...PT1.Close)
df_exp <- rename(df_exp, PT1.Relation = IPE...PT1.Relation)
df_exp <- rename(df_exp, Social.Support = IPE...Social.Support )
df_exp <- rename(df_exp, Peer.Number = IPE...Peer.Number)
df_exp <- rename(df_exp, Peer.Presence = IPE...Peer.Presence)
# Renaming Confound Questions
df_exp <- rename(df_exp, Discuss = OWPE...Discuss)
df_exp <- rename(df_exp, Discuss.Times = OWPE...Discuss.Times)
df_exp <- rename(df_exp, Search = OWPE...Search)
df_exp <- rename(df_exp, Search.Times = OWPE...Search.Time)
df_exp <- rename(df_exp, Phobias = IPE...Phobias)
df_exp <- rename(df_exp, Phobias.Desc = IPE...Phobias.Desc.)
df_exp <- rename(df_exp, HH.Compare = IPE...HH.Compare)
# Renaming Motivations
df_exp <- rename(df_exp, Motive.Payment = Motivations_1)
df_exp <- rename(df_exp, Motive.Thrill = Motivations_2)
df_exp <- rename(df_exp, Motive.Novelty = Motivations_3)
df_exp <- rename(df_exp, Motive.Challenge = Motivations_4)
df_exp <- rename(df_exp, Motive.Peers = Motivations_5)
df_exp <- rename(df_exp, Motive.Science = Motivations_6)
df_exp <- rename(df_exp, Motive.Bored = Motivations_7)
# Removing Columns w/ Unorganized Data
df_exp <- subset(df_exp,
select= c("PID", "Stage", "TBTW.Previous", "TBTW.Confirm", "Pos.Anticipate", "Neg.Anticipate", "Fear.Before",
"Fear.During", "Fear.After", "S1.Fear", "S1.Memory", "S2.Fear", "S2.Memory", "S3.Fear", "S3.Memory",
"Set.Memory", "Peer.Presence", "Peer.Number", "Social.Support", "PT1.Relation", "PT1.Close", "PT1.Support",
"PT2.Relation", "PT2.Close", "PT2.Support", "PT3.Relation", "PT3.Close", "PT3.Support", "PT4.Relation",
"PT4.Close", "PT4.Support", "PT5.Relation", "PT5.Close", "PT5.Support", "Startle", "HH.Before", "HH.Compare",
"HH.Times", "HH.Enjoy","Fear.Enjoy", "Phobias", "Phobias.Desc", "Discuss", "Discuss.Times", "Search",
"Search.Times", "Motive.Payment", "Motive.Thrill", "Motive.Novelty", "Motive.Challenge", "Motive.Peers",
"Motive.Science", "Motive.Bored", "Information", "Sources"))
Anticip.Cols <- grep("Anticipate", colnames(df_exp))
for (i in Anticip.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (df_exp[j,i] == "None at all")
df_exp[j,i] <- 0
if (df_exp[j,i] == "A little")
df_exp[j,i] <- 1
if (df_exp[j,i] == "A moderate amount")
df_exp[j,i] <- 2
if (df_exp[j,i] == "A lot")
df_exp[j,i] <- 3
if (df_exp[j,i] == "A great deal")
df_exp[j,i] <- 4
}
}
}
for (i in Anticip.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Anticip.Cols)
Fear.Cols <- grep(("Fear"), colnames(df_exp))
Fear.Cols <- Fear.Cols[-c(7)]
for (i in Fear.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (df_exp[j,i] == "Not at all fearful")
df_exp[j,i] <- 0
if (df_exp[j,i] == "A little fearful")
df_exp[j,i] <- 1
if (df_exp[j,i] == "Moderately fearful")
df_exp[j,i] <- 2
if (df_exp[j,i] == "Very fearful")
df_exp[j,i] <- 3
if (df_exp[j,i] == "Extremely fearful")
df_exp[j,i] <- 4
}
}
}
for (i in Fear.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Fear.Cols)
Memory.Cols <- grep((".Memory"), colnames(df_exp))
Memory.Cols <- Memory.Cols[-c(7)]
for (i in Memory.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (df_exp[j,i] == "Not at all vivid")
df_exp[j,i] <- 0
if (df_exp[j,i] == "A little vivid")
df_exp[j,i] <- 1
if (df_exp[j,i] == "Moderately vivid")
df_exp[j,i] <- 2
if (df_exp[j,i] == "Very vivid")
df_exp[j,i] <- 3
if (df_exp[j,i] == "Extremely vivid")
df_exp[j,i] <- 4
}
}
}
for (i in Memory.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Memory.Cols)
Support.Cols <- grep(("Social.Support"), colnames(df_exp))
for (i in Support.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (df_exp[j,i] == "Definitely not")
df_exp[j,i] <- 0
if (df_exp[j,i] == "Probably not")
df_exp[j,i] <- 1
if (df_exp[j,i] == "Probably yes")
df_exp[j,i] <- 2
if (df_exp[j,i] == "Definitely yes")
df_exp[j,i] <- 3
}
}
}
for (i in Support.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Support.Cols)
Close.Cols <- grep((".Close"), colnames(df_exp))
PT.Cols <- NA
for (i in 1:length(Close.Cols)){
PT.Cols <- sort(c(PT.Cols, Close.Cols[i], (Close.Cols[i] + 1)))
}
rm(Close.Cols)
for (i in PT.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (grepl("Not at all", df_exp[j,i]))
df_exp[j,i] <- 0
if (grepl("A little", df_exp[j,i]))
df_exp[j,i] <- 1
if (grepl("Moderately", df_exp[j,i]))
df_exp[j,i] <- 2
if (grepl("Very", df_exp[j,i]))
df_exp[j,i] <- 3
if (grepl("Extremely", df_exp[j,i]))
df_exp[j,i] <- 4
}
}
}
for (i in PT.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(PT.Cols)
Startle.Cols <- grep(("Startle"), colnames(df_exp))
for (i in Startle.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (grepl("Not at all", df_exp[j,i]))
df_exp[j,i] <- 0
if (grepl("A little", df_exp[j,i]))
df_exp[j,i] <- 1
if (grepl("Moderately", df_exp[j,i]))
df_exp[j,i] <- 2
if (grepl("Very", df_exp[j,i]))
df_exp[j,i] <- 3
if (grepl("Extremely", df_exp[j,i]))
df_exp[j,i] <- 4
}
}
}
for (i in Startle.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Startle.Cols)
Compare.Cols <- grep(("Compare"), colnames(df_exp))
for (i in Compare.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (grepl("Much less scary", df_exp[j,i]))
df_exp[j,i] <- 0
if (grepl("Less scary", df_exp[j,i]))
df_exp[j,i] <- 1
if (grepl("A little less scary", df_exp[j,i]))
df_exp[j,i] <- 2
if (grepl("About as scary", df_exp[j,i]))
df_exp[j,i] <- 3
if (grepl("A little more scary", df_exp[j,i]))
df_exp[j,i] <- 4
if (grepl("More scary", df_exp[j,i]))
df_exp[j,i] <- 5
if (grepl("Much more scary", df_exp[j,i]))
df_exp[j,i] <- 6
}
}
}
for (i in Compare.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Compare.Cols)
Enjoy.Cols <- grep(("Enjoy"), colnames(df_exp))
for (i in Enjoy.Cols){
for (j in 1:length(rownames(df_exp))){
if (is.na(df_exp[j,i]))
df_exp[j,i] <- NA
if (!is.na(df_exp[j,i])){
if (grepl("Dislike a great deal", df_exp[j,i]))
df_exp[j,i] <- 0
if (grepl("Dislike a moderate amount", df_exp[j,i]))
df_exp[j,i] <- 1
if (grepl("Dislike a little", df_exp[j,i]))
df_exp[j,i] <- 2
if (grepl("Neither like nor dislike", df_exp[j,i]))
df_exp[j,i] <- 3
if (grepl("Like a little", df_exp[j,i]))
df_exp[j,i] <- 4
if (grepl("Like a moderate amount", df_exp[j,i]))
df_exp[j,i] <- 5
if (grepl("Like a great deal", df_exp[j,i]))
df_exp[j,i] <- 6
}
}
}
for (i in Enjoy.Cols){
df_exp[,i] <- as.numeric(df_exp[,i])
}
rm(Enjoy.Cols, i, j)
for (i in unique(df_exp$PID)){
# Sharing Pre-Exposure specific information
for (j in which(df_exp$PID == i & df_exp$Stage != "Pre-Exposure")){
df_exp$Startle[j] <- df_exp$Startle[which(df_exp$PID == i & df_exp$Stage == "Pre-Exposure")]
df_exp$HH.Times[j] <- df_exp$HH.Times[which(df_exp$PID == i & df_exp$Stage == "Pre-Exposure")]
df_exp$Fear.Enjoy[j] <- df_exp$Fear.Enjoy[which(df_exp$PID == i & df_exp$Stage == "Pre-Exposure")]
df_exp[j, grep(names(df_exp),pattern = "Motive\\.")] <- df_exp[which(df_exp$PID == i & df_exp$Stage == "Pre-Exposure"),                                     grep(names(df_exp),pattern = "Motive\\.")]
}
# Sharing Immediate Post-Exposure specific information
for (j in which(df_exp$PID == i & df_exp$Stage != "Immediate Post-Exposure")){
df_exp[j, 17:34] <- df_exp[which(df_exp$PID == i & df_exp$Stage == "Immediate Post-Exposure"), 17:34]
df_exp$HH.Compare[j] <- df_exp$HH.Compare[which(df_exp$PID == i & df_exp$Stage == "Immediate Post-Exposure")]
df_exp$Phobias[j] <- df_exp$Phobias[which(df_exp$PID == i & df_exp$Stage == "Immediate Post-Exposure")]
df_exp$Phobias.Desc[j] <- df_exp$Phobias.Desc[which(df_exp$PID == i & df_exp$Stage == "Immediate Post-Exposure")]
}
# Sharing Delayed Post-Exposure specific information
for (j in which(df_exp$PID == i & df_exp$Stage != "One Week Post-Exposure")){
if (length(which(df_exp$PID == i & df_exp$Stage == "One Week Post-Exposure")) != 0){
df_exp$Discuss[j] <- df_exp$Discuss[which(df_exp$PID == i & df_exp$Stage == "One Week Post-Exposure")]
df_exp$Discuss.Times[j] <- df_exp$Discuss.Times[which(df_exp$PID == i & df_exp$Stage == "One Week Post-Exposure")]
df_exp$Search[j] <- df_exp$Search[which(df_exp$PID == i & df_exp$Stage == "One Week Post-Exposure")]
df_exp$Search.Times[j] <- df_exp$Search.Times[which(df_exp$PID == i & df_exp$Stage == "One Week Post-Exposure")]
}
}
}
setwd(Export)
write.csv(df_exp,
file="df_exp.csv",
na = "N/A")
df_exp <- remove_NAs(df = df_exp,
cols_range = 5:ncol(df_exp))
df_exp <- remove_NAs(df = df_exp)
df_suppl <- merge(df_suppl,
df_exp,
by = "PID",
all.x = T)
rm(df_exp)
df_rat <- df[,c(18:541)]
Cols.Example <- c("PID", "Stage",
"Example.1_FirstClick", "Example.1_LastClick", "Example.1_PageSubmit", "Example.1_ClickCount", "Example.1_Response",
"Example.1_Answer.FirstClick.", "Example.1_Answer.LastClick", "Example.1_Answer.PageSubmit", "Example.1_Answer.ClickCount",
"Example.1_ISI.FirstClick.", "Example.1_ISI.LastClick", "Example.1_ISI.PageSubmit", "Example.1_ISI.ClickCount",
"Example.2_FirstClick", "Example.2_LastClick", "Example.2_PageSubmit", "Example.2_ClickCount", "Example.2_Response",
"Example.2_Answer.FirstClick.", "Example.2_Answer.LastClick", "Example.2_Answer.PageSubmit", "Example.2_Answer.ClickCount",
"Example.2_ISI.FirstClick.", "Example.2_ISI.LastClick", "Example.2_ISI.PageSubmit", "Example.2_ISI.ClickCount",
"Example.3_FirstClick", "Example.3_LastClick", "Example.3_PageSubmit", "Example.3_ClickCount", "Example.3_Response",
"Example.3_Answer.FirstClick.", "Example.3_Answer.LastClick", "Example.3_Answer.PageSubmit", "Example.3_Answer.ClickCount",
"Example.3_ISI.FirstClick.", "Example.3_ISI.LastClick", "Example.3_ISI.PageSubmit", "Example.3_ISI.ClickCount",
"Example.4_FirstClick", "Example.4_LastClick", "Example.4_PageSubmit", "Example.4_ClickCount", "Example.4_Response",
"Example.4_Answer.FirstClick.", "Example.4_Answer.LastClick", "Example.4_Answer.PageSubmit", "Example.4_Answer.ClickCount",
"Example.4_ISI.FirstClick.", "Example.4_ISI.LastClick", "Example.4_ISI.PageSubmit", "Example.4_ISI.ClickCount",
"Example.5_FirstClick", "Example.5_LastClick", "Example.5_PageSubmit", "Example.5_ClickCount", "Example.5_Response",
"Example.5_Answer.FirstClick.", "Example.5_Answer.LastClick", "Example.5_Answer.PageSubmit", "Example.5_Answer.ClickCount",
"Example.5_ISI.FirstClick.", "Example.5_ISI.LastClick", "Example.5_ISI.PageSubmit", "Example.5_ISI.ClickCount",
"Example.6_FirstClick", "Example.6_LastClick", "Example.6_PageSubmit", "Example.6_ClickCount", "Example.6_Response",
"Example.6_Answer.FirstClick.", "Example.6_Answer.LastClick", "Example.6_Answer.PageSubmit", "Example.6_Answer.ClickCount",
"Example.6_ISI.FirstClick.", "Example.6_ISI.LastClick", "Example.6_ISI.PageSubmit", "Example.6_ISI.ClickCount",
"Example.7_FirstClick", "Example.7_LastClick", "Example.7_PageSubmit", "Example.7_ClickCount", "Example.7_Response",
"Example.7_Answer.FirstClick.", "Example.7_Answer.LastClick", "Example.7_Answer.PageSubmit", "Example.7_Answer.ClickCount",
"Example.7_ISI.FirstClick.", "Example.7_ISI.LastClick", "Example.7_ISI.PageSubmit", "Example.7_ISI.ClickCount",
"Example.8_FirstClick", "Example.8_LastClick", "Example.8_PageSubmit", "Example.8_ClickCount", "Example.8_Response",
"Example.8_Answer.FirstClick.", "Example.8_Answer.LastClick", "Example.8_Answer.PageSubmit", "Example.8_Answer.ClickCount",
"Example.8_ISI.FirstClick.", "Example.8_ISI.LastClick", "Example.8_ISI.PageSubmit", "Example.8_ISI.ClickCount",
"Example.9_FirstClick", "Example.9_LastClick", "Example.9_PageSubmit", "Example.9_ClickCount", "Example.9_Response",
"Example.9_Answer.FirstClick.", "Example.9_Answer.LastClick", "Example.9_Answer.PageSubmit", "Example.9_Answer.ClickCount",
"Example.9_ISI.FirstClick.", "Example.9_ISI.LastClick", "Example.9_ISI.PageSubmit", "Example.9_ISI.ClickCount")
ColTypes <- c("_FirstClick", "_LastClick", "_PageSubmit", "_ClickCount", "_Response",
"_ISI.FirstClick.", "_ISI.LastClick", "_ISI.PageSubmit", "_ISI.ClickCount")
Groups <- c("A", "B", "C")
Qs <- NA
for (i in 1:length(Groups)){
Qs <- sort(c(Qs, paste0(Groups[i], "0", 1:9), paste0(Groups[i], 10:15)))
}
Cols.Response <- NA
for (i in 1:length(Qs)){
Cols.Response <- c(Cols.Response, paste0(Qs[i], ColTypes))
}
Cols.Response <- Cols.Response[-1]
rm(ColTypes, Groups)
RAT.Cols <- c(Cols.Example, Cols.Response)
colnames(df_rat) <- RAT.Cols
rm(Cols.Example)
df_rat <- df_rat[, -c(grep("Example.", colnames(df_rat)),grep("ISI.", colnames(df_rat)))]
df_rat <- pivot_longer(data = df_rat,
cols = grep("\\_", colnames(df_rat)),
names_to = c("Question", ".value"),
names_sep = "\\_",
values_drop_na = TRUE)
Answers <- c("boat", "honey", "pin", "blue", "soap", "fast",
"copy", "saw", "top", "pack", "under", "sweet",
"suit", "battle", "power", "watch", "bill", "sugar",
"bank", "space", "bowl", "ball", "gas", "dog","air",
"check", "post", "steam", "jelly", "broad", "sore",
"chair", "day", "pot", "blind", "candle", "cart",
"camp", "station", "mark", "gate", "field", "tow",
"salad", "lip")
df_rat$Answer <- NA
for (i in 1:length(rownames(df_rat))){
for (j in 1:length(Qs)){
if (df_rat$Question[i] == Qs[j])
df_rat$Answer[i] <- Answers[j]
}
}
rm(Answers, Qs, Cols.Response)
df_rat$Correct <- NA
df_rat$Response[is.na(df_rat$Response)] <- "NO ANSWER"
for (i in 1:length(rownames(df_rat))){
if (is.na(df_rat$Response[i]))
df_rat$Correct[i] <- 0
if (tolower(df_rat$Response[i]) != tolower(df_rat$Answer[i]))
df_rat$Correct[i] <- 0
if (tolower(df_rat$Response[i]) == tolower(df_rat$Answer[i]))
df_rat$Correct[i] <- 1
}
rm(i)
Rows <- 1:length(sort(rep(unique(df_rat$PID), 3)))
Cols <- c("PID", "Stage", "Correct", "AvgTime")
df_rat_pl  <- data.frame(matrix(NA,
nrow = length(Rows),
ncol = length(Cols),
dimnames = list(Rows, Cols)))
rm(Rows, Cols)
df_rat_pl$PID <- sort(rep(unique(df_rat$PID), 3))
df_rat_pl$Stage <- rep(unique(df_rat$Stage), length(unique(df_rat_pl$PID)))
for (i in unique(df_rat_pl$Stage)){
for (j in unique(df_rat_pl$PID)){
df_rat_pl$Correct[df_rat_pl$Stage == i & df_rat_pl$PID == j] <- sum(as.numeric(df_rat$Correct[df_rat$Stage == i & df_rat$PID == j]))
df_rat_pl$AvgTime[df_rat_pl$Stage == i & df_rat_pl$PID == j] <- mean(as.numeric(df_rat$PageSubmit[df_rat$Stage == i & df_rat$PID == j]), na.rm =  T)
df_rat_pl$AvgTime_correct[df_rat_pl$Stage == i & df_rat_pl$PID == j] <- mean(as.numeric(df_rat$PageSubmit[df_rat$Stage == i & df_rat$PID == j & df_rat$Correct == 1]), na.rm =  T)
}
}
rm(i, j)
df_rat_pl <- df_rat_pl[-which(is.na(df_rat_pl$AvgTime)),]
df_rat_pl$CogLoad_Pre <- NA
df_rat_pl$CogLoad_Post <- NA
for (i in unique(df_rat_pl$PID)){
if (length(which(df_rat_pl$PID == i & (df_rat_pl$Stage == "Pre-Exposure" | df_rat_pl$Stage == "Immediate Post-Exposure"))) == 2){
df_rat_pl$CogLoad_Pre[df_rat_pl$PID == i] <- df_rat_pl$Correct[df_rat_pl$PID == i & df_rat_pl$Stage == "Pre-Exposure"] - df_rat_pl$Correct[df_rat_pl$PID == i & df_rat_pl$Stage == "Immediate Post-Exposure"]
}
if (length(which(df_rat_pl$PID == i & (df_rat_pl$Stage == "Immediate Post-Exposure" | df_rat_pl$Stage == "One Week Post-Exposure"))) == 2){
df_rat_pl$CogLoad_Post[df_rat_pl$PID == i] <- df_rat_pl$Correct[df_rat_pl$PID == i & df_rat_pl$Stage == "One Week Post-Exposure"] - df_rat_pl$Correct[df_rat_pl$PID == i & df_rat_pl$Stage == "Immediate Post-Exposure"]
}
}
rm(df_rat, df, RAT.Cols, i, df_rat_aov)
df_suppl <- merge(df_suppl,
df_rat_pl,
by = c("PID", "Stage"),
all.y = T)
rm(df_rat_pl)
df_cond <- read.csv(paste0(Import,"GoalAssignments.csv"),
header = T)
df_cond <- subset(df_cond, select = c("PID", "Code", "Date_HH", "Time_HH"))
df_cond$Code[df_cond$Code == 0] <- "Control"
df_cond$Code[df_cond$Code == 1] <- "Crypt_share"
df_cond$Code[df_cond$Code == 2] <- "Crypt_test"
df_cond$Group <- NA
for (i in 1:nrow(unique(df_cond[,3:4]))){
for (j in 1:nrow(df_cond)){
if (all(cbind(df_cond[j,3:4]) == unique(df_cond[,3:4])[i,])){
df_cond$Group[j] <- paste("Group", i)
}
}
}
df_cond <- rename(df_cond,
c(Cond = Code))
df_cond$Cond <- as.factor(df_cond$Cond)
df_cond$Date_HH <- as.factor(df_cond$Date_HH)
df_cond$Time_HH <- as.factor(df_cond$Time_HH)
df_cond$Group <- as.factor(df_cond$Group)
df_suppl <- merge(df_suppl,
df_cond,
by = "PID",
all.x = T)
rm(df_cond,i,j)
df_fear <- read.csv(paste0(Import,"fearrating.csv"),
header = T)
df_suppl <- merge(df_suppl,
df_fear,
by = "PID",
all.x = T)
rm(df_fear)
df <- merge(df_reg,
df_suppl,
by = c("PID", "Stage"),
all.x = T)
rm(df_suppl, df_reg)
write.csv(df, "C:/Users/tui81100/Documents/GitHub/fright_night_study/data/Study_02/raw/df.csv")
pacman::p_load(effects,
lme4,
performance,
stargazer,
tidyverse)
source("https://github.com/Wjpmitchell3/stinkR/blob/main/remove_NAs.R?raw=TRUE", local = T)
source("https://github.com/Wjpmitchell3/stinkR/blob/main/make_df.R?raw=TRUE", local = T)
options(scipen=100)
options(digits=3)
options(tinytex.verbose = TRUE)
# Identifying our main directory
WorkDir <- "C:/Users/tui81100/Documents/GitHub/fright_night_study/"
# Identifying specific directories to read and write from
Export <- paste0(WorkDir, "data/Study_02/Derivative/")
Import <- paste0(WorkDir, "data/Study_02/Raw/")
Plots <- paste0(WorkDir, "plots/")
setwd(Import)
df <- read.csv(file = "df.csv",
header = T,
sep=",",
stringsAsFactors = F,
na.strings=c("","N/A"))
df_all <- df
df <- df %>%
subset(!is.na(df$EmoMod) &
df$EmoMod != "" &
!is.na(df$PID))
df$Distracted <- NA
df$Distracted_cat <- NA
df$Distracted[df$Attention.Deployment == 1 & df$Response.Modulation == 0 & df$Reappraisal == 0] <- 1
df$Distracted_cat[df$Attention.Deployment == 1 & df$Response.Modulation == 0 & df$Reappraisal == 0] <- "Distracted"
df$Distracted[df$Attention.Deployment == 0 & df$Response.Modulation == 0 & df$Reappraisal == 1] <- 0
df$Distracted_cat[df$Attention.Deployment == 0 & df$Response.Modulation == 0 & df$Reappraisal == 1] <- "Reappraised"
df <- subset(df, df$Reg == "Decrease" & !is.na(df$Distracted) & df$Valence <= 0.5)
pacman::p_load(effects,
lme4,
performance,
stargazer,
tidyverse)
source("https://github.com/Wjpmitchell3/stinkR/blob/main/remove_NAs.R?raw=TRUE", local = T)
source("https://github.com/Wjpmitchell3/stinkR/blob/main/make_df.R?raw=TRUE", local = T)
options(scipen=100)
options(digits=3)
options(tinytex.verbose = TRUE)
# Identifying our main directory
WorkDir <- "C:/Users/tui81100/Documents/GitHub/fright_night_study/"
# Identifying specific directories to read and write from
Export <- paste0(WorkDir, "data/Study_02/Derivative/")
Import <- paste0(WorkDir, "data/Study_02/Raw/")
Plots <- paste0(WorkDir, "plots/")
setwd(Import)
df <- read.csv(file = "df.csv",
header = T,
sep=",",
stringsAsFactors = F,
na.strings=c("","N/A"))
df_all <- df
df <- df %>%
subset(!is.na(df$EmoMod) &
df$EmoMod != "" &
!is.na(df$PID))
df$Distracted <- NA
df$Distracted_cat <- NA
df$Distracted[df$Attention.Deployment == 1 & df$Response.Modulation == 0 & df$Reappraisal == 0] <- 1
df$Distracted_cat[df$Attention.Deployment == 1 & df$Response.Modulation == 0 & df$Reappraisal == 0] <- "Distracted"
df$Distracted[df$Attention.Deployment == 0 & df$Response.Modulation == 0 & df$Reappraisal == 1] <- 0
df$Distracted_cat[df$Attention.Deployment == 0 & df$Response.Modulation == 0 & df$Reappraisal == 1] <- "Reappraised"
df <- subset(df, df$Reg == "Decrease" & !is.na(df$Distracted) & df$Valence <= 0.5)
paste("Number of Participants:", length(unique(df$PID)))
paste("Number of Events:", nrow(distinct(subset(df, select = c("PID", "Timing", "EventNum")))))
paste("Number of  Immediate Events:", nrow(distinct(subset(df, df$Timing == "ImmReg", select = c("PID", "Timing", "EventNum")))))
paste("Number of  Familiar Recall Events:", nrow(distinct(subset(df, df$Timing == "MemReg", select = c("PID", "Timing", "EventNum")))))
paste("Number of Novel Recall Events:", nrow(distinct(subset(df, df$Timing == "DelReg", select = c("PID", "Timing", "EventNum")))))
paste("Number of Distracted cases:", length(which(df$Distracted == 1)))
paste("Number of Reappraised cases:", length(which(df$Distracted == 0)))
